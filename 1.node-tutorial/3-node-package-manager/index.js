// 3. NPM (NODE PACKAGE MANAGER) KULLANIMI
// Harici kÃ¼tÃ¼phaneler yÃ¼kleme ve kullanma - Lodash Ã¶rneÄŸi

/*
=== NPM NEDÄ°R? ===
NPM (Node Package Manager), Node.js iÃ§in paket yÃ¶netim sistemidir.
- DÃ¼nyanÄ±n en bÃ¼yÃ¼k yazÄ±lÄ±m kÃ¼tÃ¼phanesi registrysi
- Paketleri yÃ¼kleme, gÃ¼ncelleme, kaldÄ±rma iÅŸlemleri
- package.json ile baÄŸÄ±mlÄ±lÄ±k yÃ¶netimi
- Semantic versioning (semver) desteÄŸi

=== NPM KOMUTLARI ===
- npm init: Yeni proje oluÅŸturur, package.json yaratÄ±r
- npm install <paket>: Paket yÃ¼kler (node_modules klasÃ¶rÃ¼ne)
- npm install --save: package.json'a baÄŸÄ±mlÄ±lÄ±k ekler
- npm install --global: Global olarak yÃ¼kler
- npm uninstall: Paketi kaldÄ±rÄ±r

=== LODASH KÃœTÃœPHANESÄ° ===
Lodash, JavaScript iÃ§in utility kÃ¼tÃ¼phanesidir.
- Array, object, string manipÃ¼lasyonu
- Functional programming desteÄŸi
- Cross-browser uyumlu
- Performans optimizasyonlarÄ±
*/

// Lodash kÃ¼tÃ¼phanesini iÃ§e aktarÄ±r (npm install lodash ile yÃ¼klendi)
// CommonJS require syntax kullanÄ±lÄ±yor
const loadsh = require("lodash");

// Ä°simlerden oluÅŸan bir dizi tanÄ±mlar
// Bu dizideki her ismin ilk harfini bÃ¼yÃ¼k yapacaÄŸÄ±z
const names = ["ali", "veli", "deli"]; // String array - kÃ¼Ã§Ã¼k harfli isimler

// Lodash'in map ve capitalize fonksiyonlarÄ±nÄ± kullanarak
// dizideki her ismin ilk harfini bÃ¼yÃ¼k yapar
// map: Dizinin her elemanÄ±na fonksiyon uygular
// capitalize: String'in ilk harfini bÃ¼yÃ¼k yapar
const capitalize = loadsh.map(names, loadsh.capitalize);

// Sonucu konsola yazdÄ±rÄ±r: ["Ali", "Veli", "Deli"]
console.log("Orijinal isimler:", names);
console.log("BÃ¼yÃ¼k harfli isimler:", capitalize);

/*
=== LODASH FONKSIYON DETAYI ===
loadsh.map(names, loadsh.capitalize) iÅŸlemi:
1. names dizisindeki her elemana eriÅŸir
2. Her elemanÄ± loadsh.capitalize fonksiyonuna gÃ¶nderir
3. capitalize fonksiyonu "ali" â†’ "Ali" dÃ¶nÃ¼ÅŸÃ¼mÃ¼ yapar
4. Yeni bir dizi oluÅŸturur ve dÃ¶ndÃ¼rÃ¼r

=== ALTERNATIF KULLANIM ===
Vanilla JavaScript ile aynÄ± iÅŸlem:
const capitalize = names.map(name => 
    name.charAt(0).toUpperCase() + name.slice(1)
);

=== PACKAGE.JSON ROLE ===
Bu dosyada lodash dependency olarak eklenir:
{
    "dependencies": {
        "lodash": "^4.17.21"
    }
}

=== Ã–NEMLÄ° NOTLAR ===
ğŸ“Œ npm install Ã¶ncesinde package.json oluÅŸturun
ğŸ“Œ node_modules klasÃ¶rÃ¼ git'e eklenmez (.gitignore)
ğŸ“Œ package-lock.json exact versiyonlarÄ± tutar
ğŸ“Œ Lodash modern JavaScript'e gÃ¶re gereklilik azalmÄ±ÅŸtÄ±r

=== SEMANTIC VERSIONING ===
- ^4.17.21: Minor ve patch gÃ¼ncellemelerini kabul eder
- ~4.17.21: Sadece patch gÃ¼ncellemelerini kabul eder
- 4.17.21: Exact version (gÃ¼ncelleme yok)

=== MODERN ALTERNATÄ°FLER ===
âœ¨ Array.prototype.map(): Native JavaScript
âœ¨ String.prototype methods: Native string iÅŸlemleri
âœ¨ ES6+ features: Modern JavaScript Ã¶zellikleri
*/
